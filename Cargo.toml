# Uncomment for future compilation profiling
# cargo-features = ["profile-rustflags"]

[workspace]
resolver = "2"
members = [
    "view/desktop/bin",

    "crates/moss-text",
    "crates/moss-fs",
    "crates/moss-jsonlogic",
    "crates/moss-jsonlogic-macro",
    "crates/moss-uikit",
    "crates/moss-html",
    "crates/moss-themeconv",
    "crates/moss-env",
    "crates/moss-async",
    "crates/moss-collection",

    "internal/platform/core",
    "internal/platform/fs",
    "internal/platform/formation",
    "internal/platform/configuration",
    "internal/platform/user_profile",
    "internal/platform/environment",
    "internal/platform/utl",
    "internal/platform/workspace",

    "internal/workbench/desktop/models",
    "internal/workbench/service/configuration/common",
    "internal/workbench/service/configuration/tao",
    "internal/workbench/service/user_profile/tao",
    "internal/workbench/service/environment/tao",

    "tools/xtask",
    "misc/themeinstall",
]

[profile.dev]
# Uncomment for future compilation profiling
# rustflags = ["-Zself-profile=profiles/clean"]


[profile.release]
codegen-units = 1 # Compile crates one after another so the compiler can optimize better
lto = true        # Enables link to optimizations
opt-level = "s"   # Optimize for binary size
debug = true      # Enable debug symbols, for profiling

[profile.bench]
codegen-units = 256
lto = false
opt-level = 3


[workspace.dependencies]
moss_uikit = { path = "crates/moss-uikit" }
moss_html = { path = "crates/moss-html" }
moss_text = { path = "crates/moss-text" }
moss_fs = { path = "crates/moss-fs" }
moss_themeconv = { path = "crates/moss-themeconv" }
moss_jsonlogic = { path = "crates/moss-jsonlogic" }
moss_jsonlogic_macro = { path = "crates/moss-jsonlogic-macro" }
moss_env = { path = "crates/moss-env" }
moss_async = { path = "crates/moss-async" }
moss_collection = { path = "crates/moss-collection" }

platform_core = { path = "internal/platform/core" }
platform_utl = { path = "internal/platform/utl" }
platform_configuration = { path = "internal/platform/configuration" }
platform_formation = { path = "internal/platform/formation" }
platform_user_profile = { path = "internal/platform/user_profile" }
platform_environment = { path = "internal/platform/environment" }
platform_workspace = { path = "internal/platform/workspace" }
platform_fs = { path = "internal/platform/fs" }

desktop_models = { path = "internal/workbench/desktop/models" }

workbench_desktop = { path = "internal/workbench/desktop" }
workbench_service_configuration_common = { path = "internal/workbench/service/configuration/common" }
workbench_service_configuration_tao = { path = "internal/workbench/service/configuration/tao" }
workbench_service_user_profile_tao = { path = "internal/workbench/service/user_profile/tao" }
workbench_service_environment_tao = { path = "internal/workbench/service/environment/tao" }

indexmap = "2.7.0"
arcstr = "1.2.0"
bstr = "1.11.0"
ts-rs = "10.1"
thiserror = "2.0"
tauri = { version = "2.0.6", features = ["devtools"] }
libc = "0.2.155"
fnv = "1.0.7"
anyhow = "1.0"
notify = "6.1.1"
hashbrown = "0.15.0"
arc-swap = "1.7.1"
radix_trie = "0.2.1"
parking_lot = "0.12.3"
derive_more = "0.99.17"
strum = "0.26"
strum_macros = "0.26"
lazy-regex = "3.3.0"
dunce = "1.0.5"
tokio = "1"
smol = "2.0.0"
futures = "0.3"
async-task = "4.7.1"
flume = "0.11.0"
serde = "1.0"
serde_json = "1.0"
async-trait = "0.1"
once_cell = "1.19"
lazy_static = "1.4.0"
surrealdb = "1.5.3"
tracing = "0.1"
tracing-subscriber = "0.3.18"
tracing-appender = "0.2.3"
slotmap = "1.0.7"
rustc-hash = "2.1.0"
parking = "2.2.1"
waker-fn = "1.2.0"
im = "15.1.0"
smallvec = "1.13.2"
dyn-clone = "1.0.17"

hecs = "0.10.5"
hecs-hierarchy = "0.12.1"

fern = "0.7.0"
rand = "0.8.5"
log = "0.4.21"
quote = "1.0"
static_str_ops = "0.1.2"
homedir = "0.3.4"
csscolorparser = "0.7.0"
jsonschema = {version= "0.26.1", default-features = false}

tauri-plugin-os = "2.0.1"