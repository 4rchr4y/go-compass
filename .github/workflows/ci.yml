name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  check-modified-files:
    runs-on: ubuntu-latest
    outputs:
      node: ${{ steps.node.outputs.any_changed }}
      rust: ${{ steps.rust.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
      - name: Get all changed Rust files
        id: rust
        uses: tj-actions/changed-files@v45
        with:
          files: |
            **.rs
            Cargo.toml
      - name: Get all changed NodeJS files
        id: node
        uses: tj-actions/changed-files@v45
        with:
          files: |
            **.ts
            **.tsx
            **.js
            **.jsx
            package.json


  rust-workflows:
    name: Rust Workflows - ${{ matrix.task.name }}
    needs: check-modified-files
    if: ${{ needs.check-modified-files.outputs.rust == 'true' }}

    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        task:
          - name: Unit Tests
            command: cargo -q test --lib
          - name: Docs Tests
            command: cargo -q test --doc
          - name: Workspace Audit
            command: |
              set -e
              cd ${GITHUB_WORKSPACE}/tools/xtask
              cargo -q run -- --fail-fast rwa
    timeout-minutes: 15
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Rust Dependencies
        uses: Swatinem/rust-cache@v2.7.5
        with:
          workspaces: ".github/cache"

      - name: Cache Apt Packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: |
            libwebkit2gtk-4.0-dev
            libwebkit2gtk-4.1-dev
            libappindicator3-dev
            librsvg2-dev
            patchelf

      - name: Execute Rust Task - ${{ matrix.task.name }}
        run: ${{ matrix.task.command }}
        working-directory: ".github/cache"

  node-workflows:
    name: Node.js Workflows - ${{ matrix.task.name }}
    needs: check-modified-files
    if: ${{ needs.check-modified-files.outputs.node == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        task:
          - name: Lint
            command: pnpm run lint -- --quiet

          - name: Test Packages
            command: pnpm run test --project packages
          - name: Test Packages Stories
            command: pnpm run test --project packages-stories
          - name: Test Desktop
            command: pnpm run test --project desktop
          - name: Test Desktop Stories
            command: pnpm run test --project desktop-stories
    timeout-minutes: 15
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install PNPM
        uses: pnpm/action-setup@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install

      - name: Install Playwright Browserx
        run: npx playwright install chromium --with-deps

      - name: Build Icons
        run: make gen-icons

      - name: Execute Task - ${{ matrix.task.name }}
        run: ${{ matrix.task.command }}
